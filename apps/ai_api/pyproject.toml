[project]
name = "eda.ai-api"
version = "0.1.0"
description = "Add your description here"
readme = "README.md"
requires-python = ">=3.11"
dependencies = [
    "requests>=2.31.0",
    "uvicorn>=0.25.0",
    "fastapi>=0.109.1",
    "numpy>=1.26.2",
    "joblib>=1.3.2",
    "loguru>=0.7.2",
    "pydantic>=2.5.3",
    "langchain-groq>=0.2.1",
    "opportunity-finder",
    "proposal_writer",
    "onboarding",
    "ffmpeg>=1.4",
    "python-multipart>=0.0.17",
]

[project.optional-dependencies]
dev = [
    "isort>=5.13.2",
    "mypy>=1.8.0", 
    "black>=24.3.0",
    "flake8>=6.1.0",
    "bandit>=1.7.6",
    "pytest>=7.4.3",
    "httpx>=0.26.0",
    "pytest-cov>=4.1.0"
]

[project.scripts]
run = "eda_ai_api.main:app"

[tool.black]
line-length = 88
target-version = ['py311']
include = '\.pyi?$'
extend-exclude = '''
/(
  \.toml
  |\.sh
  |\.yaml
  |\.yml
  |\.git
  |\.ini
  |Dockerfile
  |Jenkinfile
)/
'''

[tool.pytest.ini_options]
testpaths = ['tests']

[tool.coverage.run]
source = ['eda_ai_api']
branch = true

[tool.coverage.report]
fail_under = 90
precision = 2

[tool.mypy]
python_version = "3.11"
warn_return_any = false
warn_unused_configs = true
disallow_untyped_defs = true
ignore_missing_imports = true

[tool.uv.sources]
opportunity-finder = { path = "../../plugins/grant_plugin/opportunity_finder" }
proposal_writer = { path = "../../plugins/grant_plugin/proposal_writer" }
onboarding = { path = "../../plugins/onboarding" }

[build-system]
requires = ["hatchling"]
build-backend = "hatchling.build"
