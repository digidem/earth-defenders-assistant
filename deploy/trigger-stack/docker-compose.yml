x-webapp-env: &webapp-env
  LOGIN_ORIGIN: &trigger-url ${TRIGGER_PROTOCOL}://${TRIGGER_DOMAIN}
  APP_ORIGIN: *trigger-url
  DEV_OTEL_EXPORTER_OTLP_ENDPOINT: &trigger-otel ${TRIGGER_PROTOCOL}://${TRIGGER_DOMAIN}/otel
  ELECTRIC_ORIGIN: http://electric:3000

x-worker-env: &worker-env
  PLATFORM_HOST: webapp 
  PLATFORM_WS_PORT: ${REMIX_APP_PORT}
  SECURE_CONNECTION: "false"
  OTEL_EXPORTER_OTLP_ENDPOINT: *trigger-otel

volumes:
  postgres-data:
  redis-data:

networks:
  webapp:

services:
  webapp:
    image: ghcr.io/triggerdotdev/trigger.dev:${TRIGGER_IMAGE_TAG}
    container_name: trigger-webapp
    restart: ${RESTART_POLICY}
    env_file:
      - .env
    environment:
      <<: *webapp-env
    ports:
      - ${DOCKER_PUBLISH_IP}:${PORT}:${REMIX_APP_PORT}
    depends_on:
      - postgres
      - redis
    networks:
      - webapp

  postgres:
    image: postgres:${POSTGRES_IMAGE_TAG}
    container_name: trigger-postgres
    restart: ${RESTART_POLICY}
    volumes:
      - postgres-data:/var/lib/postgresql/data/
    env_file:
      - .env
    networks:
      - webapp
    ports:
      - ${DOCKER_PUBLISH_IP}:${POSTGRES_PORT}:5432
    command:
      - -c
      - wal_level=logical

  redis:
    image: redis:${REDIS_IMAGE_TAG}
    container_name: trigger-redis
    restart: ${RESTART_POLICY}
    volumes:
      - redis-data:/data
    networks:
      - webapp
    ports:
      - ${DOCKER_PUBLISH_IP}:${REDIS_PORT}:6379

  docker-provider:
    image: ghcr.io/triggerdotdev/provider/docker:${TRIGGER_IMAGE_TAG}
    container_name: trigger-docker-provider
    restart: ${RESTART_POLICY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - webapp
    depends_on:
      - webapp
    ports:
      - ${DOCKER_PUBLISH_IP}:${HTTP_SERVER_PORT}:${HTTP_SERVER_PORT}
    env_file:
      - .env
    environment:
      <<: *worker-env
      PLATFORM_SECRET: ${PROVIDER_SECRET}

  coordinator:
    image: ghcr.io/triggerdotdev/coordinator:${TRIGGER_IMAGE_TAG}
    container_name: trigger-coordinator
    restart: ${RESTART_POLICY}
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock
    user: root
    networks:
      - webapp
    depends_on:
      - webapp
    ports:
      - ${DOCKER_PUBLISH_IP}:${COORDINATOR_PORT}:${COORDINATOR_PORT}
    env_file:
      - .env
    environment:
      <<: *worker-env
      PLATFORM_SECRET: ${COORDINATOR_SECRET}

  electric:
    image: electricsql/electric:${ELECTRIC_IMAGE_TAG}
    container_name: trigger-electric
    restart: ${RESTART_POLICY}
    environment:
      DATABASE_URL: ${DATABASE_URL}?sslmode=disable
    networks:
      - webapp
    depends_on:
      - postgres
    ports:
      - ${DOCKER_PUBLISH_IP}:3061:3000